# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

.if ${VERBOSE:U0} != 1
VV=@
.endif

CCACHE=/usr/local/bin/ccache
MRC=/usr/local/bin/llvm-rc
GC=/usr/local/bin/go
MM=/usr/bin/clang
MXX=/usr/bin/clang
AS=/usr/bin/clang
CU=/usr/bin/clang
CC=/usr/bin/clang
RC=/usr/local/bin/rustc
CXX=/usr/bin/clang

RCAR=/usr/local/bin/rustc
AR=/usr/bin/ar
GCAR=/usr/local/bin/go
RCSH=/usr/local/bin/rustc
SH=/usr/bin/clang++
RCLD=/usr/local/bin/rustc
LD=/usr/bin/clang++
GCLD=/usr/local/bin/go

wutil_LD=/usr/bin/clang++
wutil_CC=/usr/bin/clang

wutil_CCFLAGS=-Qunused-arguments -m64 -g -O3 -fsanitize=address -fsanitize=undefined -DNDEBUG
wutil_LDFLAGS=-m64 -s -fsanitize=address -fsanitize=undefined

default:  wutil

all:  wutil

.PHONY: default all  wutil

wutil: build/bsd/x86_64/release/wutil
build/bsd/x86_64/release/wutil: build/.objs/wutil/bsd/x86_64/release/src/utils.c.o build/.objs/wutil/bsd/x86_64/release/src/usage.c.o build/.objs/wutil/bsd/x86_64/release/src/string_utils.c.o build/.objs/wutil/bsd/x86_64/release/src/main.c.o
	@echo linking.release wutil
	@mkdir -p build/bsd/x86_64/release
	$(VV)$(wutil_LD) -o build/bsd/x86_64/release/wutil build/.objs/wutil/bsd/x86_64/release/src/utils.c.o build/.objs/wutil/bsd/x86_64/release/src/usage.c.o build/.objs/wutil/bsd/x86_64/release/src/string_utils.c.o build/.objs/wutil/bsd/x86_64/release/src/main.c.o $(wutil_LDFLAGS)

build/.objs/wutil/bsd/x86_64/release/src/utils.c.o: src/utils.c
	@echo ccache compiling.release src/utils.c
	@mkdir -p build/.objs/wutil/bsd/x86_64/release/src
	$(VV)$(wutil_CC) -c $(wutil_CCFLAGS) -o build/.objs/wutil/bsd/x86_64/release/src/utils.c.o src/utils.c

build/.objs/wutil/bsd/x86_64/release/src/usage.c.o: src/usage.c
	@echo ccache compiling.release src/usage.c
	@mkdir -p build/.objs/wutil/bsd/x86_64/release/src
	$(VV)$(wutil_CC) -c $(wutil_CCFLAGS) -o build/.objs/wutil/bsd/x86_64/release/src/usage.c.o src/usage.c

build/.objs/wutil/bsd/x86_64/release/src/string_utils.c.o: src/string_utils.c
	@echo ccache compiling.release src/string_utils.c
	@mkdir -p build/.objs/wutil/bsd/x86_64/release/src
	$(VV)$(wutil_CC) -c $(wutil_CCFLAGS) -o build/.objs/wutil/bsd/x86_64/release/src/string_utils.c.o src/string_utils.c

build/.objs/wutil/bsd/x86_64/release/src/main.c.o: src/main.c
	@echo ccache compiling.release src/main.c
	@mkdir -p build/.objs/wutil/bsd/x86_64/release/src
	$(VV)$(wutil_CC) -c $(wutil_CCFLAGS) -o build/.objs/wutil/bsd/x86_64/release/src/main.c.o src/main.c

clean:  clean_wutil

clean_wutil: 
	@rm -rf build/bsd/x86_64/release/wutil
	@rm -rf build/bsd/x86_64/release/wutil.sym
	@rm -rf build/.objs/wutil/bsd/x86_64/release/src/utils.c.o
	@rm -rf build/.objs/wutil/bsd/x86_64/release/src/usage.c.o
	@rm -rf build/.objs/wutil/bsd/x86_64/release/src/string_utils.c.o
	@rm -rf build/.objs/wutil/bsd/x86_64/release/src/main.c.o

